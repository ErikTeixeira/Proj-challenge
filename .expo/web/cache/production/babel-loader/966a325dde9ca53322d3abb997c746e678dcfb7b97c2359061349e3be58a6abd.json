{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import styles from'./style';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SingleOptionSelector=({title,options,selectedOption,setSelectedOption})=>{const toggleOption=option=>{if(selectedOption===option){setSelectedOption(null);}else{setSelectedOption(option);}};return _jsxs(View,{style:styles.inputContainer,children:[_jsx(Text,{style:styles.login,children:title}),_jsx(View,{style:styles.option,children:options.map(option=>_jsx(TouchableOpacity,{style:[styles.optionButton,selectedOption===option&&styles.optionButtonSelected],onPress:()=>toggleOption(option),children:_jsx(Text,{style:[styles.optionText,selectedOption===option&&styles.optionTextSelected],children:option})},option))})]});};export default SingleOptionSelector;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","styles","jsx","_jsx","jsxs","_jsxs","SingleOptionSelector","title","options","selectedOption","setSelectedOption","toggleOption","option","style","inputContainer","children","login","map","optionButton","optionButtonSelected","onPress","optionText","optionTextSelected"],"sources":["C:/Users/labsfiap/Downloads/Proj-challenge/src/components/SingleOptionSelector/index.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport styles from './style'; // Crie também o arquivo style.js para este componente\r\n\r\nconst SingleOptionSelector = ({ title, options, selectedOption, setSelectedOption }) => {\r\n  const toggleOption = (option) => {\r\n    if (selectedOption === option) {\r\n      setSelectedOption(null); // Desmarca se já estiver selecionado\r\n    } else {\r\n      setSelectedOption(option); // Seleciona a opção\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.inputContainer}>\r\n      <Text style={styles.login}>{title}</Text>\r\n\r\n      <View style={styles.option}>\r\n        {options.map((option) => (\r\n          <TouchableOpacity\r\n            key={option}\r\n            style={[\r\n              styles.optionButton,\r\n              selectedOption === option && styles.optionButtonSelected,\r\n            ]}\r\n            onPress={() => toggleOption(option)}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.optionText,\r\n                selectedOption === option && styles.optionTextSelected,\r\n              ]}\r\n            >\r\n              {option}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SingleOptionSelector;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,gBAAA,sDAE1B,MAAO,CAAAC,MAAM,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,oBAAoB,CAAGA,CAAC,CAAEC,KAAK,CAAEC,OAAO,CAAEC,cAAc,CAAEC,iBAAkB,CAAC,GAAK,CACtF,KAAM,CAAAC,YAAY,CAAIC,MAAM,EAAK,CAC/B,GAAIH,cAAc,GAAKG,MAAM,CAAE,CAC7BF,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,IAAM,CACLA,iBAAiB,CAACE,MAAM,CAAC,CAC3B,CACF,CAAC,CAED,MACE,CAAAP,KAAA,CAACP,IAAI,EAACe,KAAK,CAAEZ,MAAM,CAACa,cAAe,CAAAC,QAAA,EACjCZ,IAAA,CAACJ,IAAI,EAACc,KAAK,CAAEZ,MAAM,CAACe,KAAM,CAAAD,QAAA,CAAER,KAAK,CAAO,CAAC,CAEzCJ,IAAA,CAACL,IAAI,EAACe,KAAK,CAAEZ,MAAM,CAACW,MAAO,CAAAG,QAAA,CACxBP,OAAO,CAACS,GAAG,CAAEL,MAAM,EAClBT,IAAA,CAACH,gBAAgB,EAEfa,KAAK,CAAE,CACLZ,MAAM,CAACiB,YAAY,CACnBT,cAAc,GAAKG,MAAM,EAAIX,MAAM,CAACkB,oBAAoB,CACxD,CACFC,OAAO,CAAEA,CAAA,GAAMT,YAAY,CAACC,MAAM,CAAE,CAAAG,QAAA,CAEpCZ,IAAA,CAACJ,IAAI,EACHc,KAAK,CAAE,CACLZ,MAAM,CAACoB,UAAU,CACjBZ,cAAc,GAAKG,MAAM,EAAIX,MAAM,CAACqB,kBAAkB,CACtD,CAAAP,QAAA,CAEDH,MAAM,CACH,CAAC,EAdFA,MAeW,CACnB,CAAC,CACE,CAAC,EACH,CAAC,CAEX,CAAC,CAED,cAAe,CAAAN,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}