{"ast":null,"code":"import React from'react';import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{Ionicons}from'@expo/vector-icons';import{useNavigation}from'@react-navigation/native';import styles from\"./style\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DetalhesItinerario=({route})=>{const{itinerary}=route.params;const navigation=useNavigation();const formatItinerary=itineraryText=>{if(!itineraryText)return null;const dayRegex=/Dia (\\d+)/g;let days=[];let match;while((match=dayRegex.exec(itineraryText))!==null){days.push(match.index);}if(days.length===0){days=[0];}const formattedDays=days.map((startIndex,dayIndex)=>{const endIndex=dayIndex<days.length-1?days[dayIndex+1]:itineraryText.length;const dayText=itineraryText.substring(startIndex,endIndex);const dayNumber=dayIndex+1;const activities=dayText.split('\\n').filter(line=>line.trim()!==''&&!line.startsWith('Dia ')).map(line=>line.trim());const formattedActivities=activities.map((activity,activityIndex)=>{activity=activity.replace(/\\*\\*/g,'');activity=activity.replace(/(\\d+)\\n(\\d+)/g,'$1$2');if(activity.match(/(Manhã|Tarde|Noite)/)){return _jsx(Text,{style:styles.periodTitle,children:activity},`${dayIndex}-${activityIndex}`);}let[description,...details]=activity.split(':');details=details.join(':').trim();return _jsxs(View,{style:styles.activityContainer,children:[_jsx(Text,{style:styles.activityDescription,children:description.trim()}),details?_jsx(Text,{style:styles.activityDetails,children:details}):null]},`${dayIndex}-${activityIndex}`);});return _jsxs(View,{style:styles.dayContainer,children:[_jsxs(Text,{style:styles.dayTitle,children:[\"Dia \",dayNumber]}),formattedActivities]},dayIndex);});return formattedDays;};return _jsxs(View,{style:{flex:1},children:[_jsxs(ScrollView,{style:styles.container,children:[_jsxs(View,{style:styles.header,children:[_jsx(TouchableOpacity,{onPress:()=>navigation.navigate('Home'),children:_jsx(Ionicons,{name:\"arrow-back\",size:24,color:\"black\",style:styles.arrow})}),_jsx(Text,{style:styles.title,children:\"Detalhes do Itiner\\xE1rio\"})]}),formatItinerary(itinerary)]}),_jsx(View,{style:styles.footer,children:_jsx(Text,{style:styles.footerText,children:\"\\xA9 TechPeach Copyright 2024\"})})]});};export default DetalhesItinerario;","map":{"version":3,"names":["React","ScrollView","Text","TouchableOpacity","View","Ionicons","useNavigation","styles","jsx","_jsx","jsxs","_jsxs","DetalhesItinerario","route","itinerary","params","navigation","formatItinerary","itineraryText","dayRegex","days","match","exec","push","index","length","formattedDays","map","startIndex","dayIndex","endIndex","dayText","substring","dayNumber","activities","split","filter","line","trim","startsWith","formattedActivities","activity","activityIndex","replace","style","periodTitle","children","description","details","join","activityContainer","activityDescription","activityDetails","dayContainer","dayTitle","flex","container","header","onPress","navigate","name","size","color","arrow","title","footer","footerText"],"sources":["C:/Users/labsfiap/Downloads/Proj-challenge/src/screens/ItineraryDetails/index.js"],"sourcesContent":["import React from 'react';\r\nimport { ScrollView, Text, TouchableOpacity, View } from 'react-native';\r\n\r\nimport { Ionicons } from '@expo/vector-icons'; // Importe o ícone de voltar\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport styles from \"./style\";\r\n\r\nconst DetalhesItinerario = ({ route }) => {\r\n  const { itinerary } = route.params;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  // Função para formatar a resposta da IA\r\n  const formatItinerary = (itineraryText) => {\r\n    if (!itineraryText) return null;\r\n\r\n    // Divide o texto em dias usando um regex para encontrar \"Dia X\"\r\n    const dayRegex = /Dia (\\d+)/g;\r\n    let days = [];\r\n    let match;\r\n    while ((match = dayRegex.exec(itineraryText)) !== null) {\r\n      days.push(match.index);\r\n    }\r\n\r\n    // Se não encontrar nenhum \"Dia X\", assume um único dia\r\n    if (days.length === 0) {\r\n      days = [0];\r\n    }\r\n\r\n    const formattedDays = days.map((startIndex, dayIndex) => {\r\n      const endIndex = dayIndex < days.length - 1 ? days[dayIndex + 1] : itineraryText.length;\r\n      const dayText = itineraryText.substring(startIndex, endIndex);\r\n\r\n      // Extrai o número do dia\r\n      const dayNumber = dayIndex + 1;\r\n\r\n      // Divide as atividades, removendo linhas vazias e o título \"Dia X\"\r\n      const activities = dayText.split('\\n')\r\n        .filter(line => line.trim() !== '' && !line.startsWith('Dia '))\r\n        .map(line => line.trim()); // Remove espaços extras no início e fim\r\n\r\n      const formattedActivities = activities.map((activity, activityIndex) => {\r\n        // Remove os asteriscos extras\r\n        activity = activity.replace(/\\*\\*/g, '');\r\n\r\n        // Junta o horário quebrado\r\n        activity = activity.replace(/(\\d+)\\n(\\d+)/g, '$1$2');\r\n\r\n        // Verifica se a linha é um título de período (Manhã, Tarde, Noite)\r\n        if (activity.match(/(Manhã|Tarde|Noite)/)) {\r\n          return (\r\n            <Text key={`${dayIndex}-${activityIndex}`} style={styles.periodTitle}>\r\n              {activity}\r\n            </Text>\r\n          );\r\n        }\r\n\r\n        // Divide a atividade em descrição e detalhes (custo, link)\r\n        let [description, ...details] = activity.split(':');\r\n        details = details.join(':').trim();\r\n\r\n        return (\r\n          <View key={`${dayIndex}-${activityIndex}`} style={styles.activityContainer}>\r\n            <Text style={styles.activityDescription}>{description.trim()}</Text>\r\n            {details ? <Text style={styles.activityDetails}>{details}</Text> : null}\r\n          </View>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <View key={dayIndex} style={styles.dayContainer}>\r\n          <Text style={styles.dayTitle}>Dia {dayNumber}</Text>\r\n          {formattedActivities}\r\n        </View>\r\n      );\r\n    });\r\n\r\n    return formattedDays;\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.header}>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Home')}>\r\n            <Ionicons name=\"arrow-back\" size={24} color=\"black\" style={styles.arrow} />\r\n          </TouchableOpacity>\r\n          <Text style={styles.title}>Detalhes do Itinerário</Text>\r\n        </View>\r\n\r\n        {formatItinerary(itinerary)}\r\n      </ScrollView>\r\n\r\n      <View style={styles.footer}>\r\n        <Text style={styles.footerText}>\r\n          &#169; TechPeach Copyright 2024\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DetalhesItinerario;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}