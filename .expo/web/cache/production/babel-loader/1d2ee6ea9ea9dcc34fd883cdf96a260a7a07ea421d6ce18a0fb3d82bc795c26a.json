{"ast":null,"code":"import*as GoogleGenerativeAI from'@google/generative-ai';import React,{useEffect,useState}from'react';import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Pressable from\"react-native-web/dist/exports/Pressable\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{useItineraries}from'../../components/ItineraryContext';import styles from\"./style\";import cafeBar from'../../../assets/reviews/Cafe-Restaurante-Bar-.json';import comprasData from'../../../assets/reviews/Compras-.json';import culinariaData from'../../../assets/reviews/CulinariaBrasileira-Italiana-Mexicana-Japonesa-.json';import lugaresNoturnosData from'../../../assets/reviews/LugaresNoturnos-.json';import museusData from'../../../assets/reviews/Museus-Teatros-.json';import parquesData from'../../../assets/reviews/Parque-Zoo-Aquario-Trilha-Jardim.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ItineraryScreen=({route,navigation})=>{const{formData}=route.params;const[itinerary,setItinerary]=useState(null);const[isLoading,setIsLoading]=useState(true);const{addItinerary}=useItineraries();const API_KEY='AIzaSyBMrNd8C3B5dCBevyM6kez4UTdH2GaL4o4';useEffect(()=>{const fetchItinerary=async()=>{if(!formData){setIsLoading(false);return;}try{const allReviews=[...parquesData.SheetJS,...lugaresNoturnosData.Página1,...comprasData.Página1,...cafeBar.Página1,...culinariaData.Página1,...museusData.reviews];const validReviews=allReviews.filter(review=>review&&review.Lugar);const reviewsSummary=validReviews.map(review=>{return`Lugar: ${review.Lugar}, Nota: ${review.Nota}/5, Avaliação: ${review.Avaliacao}`;}).join('\\n');const genAI=new GoogleGenerativeAI.GoogleGenerativeAI(API_KEY);const model=genAI.getGenerativeModel({model:'gemini-1.5-flash'});const chatSession=model.startChat({generationConfig:{temperature:1,topP:0.95,topK:64,maxOutputTokens:8192,responseMimeType:\"text/plain\"},history:[{role:\"user\",parts:[{text:`Analise as seguintes avaliações de lugares em São Paulo para gerar o melhor itinerário para o usuário:\n                  ${reviewsSummary}`}]}]});const userMessage=`\n          Crie um itinerário de viagem detalhado para cidade de São Paulo com base nas seguintes informações que o usuário informou:\n          - Endereço do Hotel: ${formData.address} \n          - Duração da viagem: ${formData.days} dias\n          - Preferências: ${formData.selectedOptions.join(', ')}\n          - Acompanhantes: ${formData.travelCompanion}\n          - Quantidade de pessoas: ${formData.peopleCount}\n          - Orçamento: R$ ${formData.budget}\n          - Exclusões: ${formData.exclusions}\n          - Restrições alimentares: ${formData.dietaryRestriction}\n          - Acessibilidade: ${formData.accessibilityOption}\n          - Culinária: ${formData.selectedCuisines.join(', ')}\n          - Evento: ${formData.eventDetails}\n\n          Inclua sugestões de:\n          - Horários para cada atividade\n          - Meios de transporte\n          - Custo estimado de cada atividade (se possível)\n          - Links para mais informações sobre cada local\n          - Dicas adicionais para aproveitar ao máximo a viagem a São Paulo! \n        `;const result=await chatSession.sendMessage(userMessage);const generatedItinerary=result.response.text();setItinerary(generatedItinerary);}catch(error){console.error('Erro ao gerar o itinerário:',error);alert('Erro ao gerar o itinerário. Tente novamente.');}finally{setIsLoading(false);}};fetchItinerary();},[formData]);useEffect(()=>{if(route.params?.newItinerary){navigation.getParent()?.getState()?.routes.find(route=>route.name==='MeusItinerarios')?.params?.handleSaveItinerary(route.params.newItinerary);navigation.navigate('Home');}},[route.params?.newItinerary]);const formatItinerary=itineraryText=>{if(!itineraryText)return null;const dayRegex=/Dia (\\d+)/g;let days=[];let match;while((match=dayRegex.exec(itineraryText))!==null){days.push(match.index);}if(days.length===0){days=[0];}const formattedDays=days.map((startIndex,dayIndex)=>{const endIndex=dayIndex<days.length-1?days[dayIndex+1]:itineraryText.length;const dayText=itineraryText.substring(startIndex,endIndex);const dayNumber=dayIndex+1;const activities=dayText.split('\\n').filter(line=>line.trim()!==''&&!line.startsWith('Dia ')).map(line=>line.trim());const formattedActivities=activities.map((activity,activityIndex)=>{activity=activity.replace(/\\*\\*/g,'');activity=activity.replace(/(\\d+)\\n(\\d+)/g,'$1$2');if(activity.match(/(Manhã|Tarde|Noite)/)){return _jsx(Text,{style:styles.periodTitle,children:activity},`${dayIndex}-${activityIndex}`);}let[description,...details]=activity.split(':');details=details.join(':').trim();return _jsxs(View,{style:styles.activityContainer,children:[_jsx(Text,{style:styles.activityDescription,children:description.trim()}),details?_jsx(Text,{style:styles.activityDetails,children:details}):null]},`${dayIndex}-${activityIndex}`);});return _jsxs(View,{style:styles.dayContainer,children:[_jsxs(Text,{style:styles.dayTitle,children:[\"Dia \",dayNumber]}),formattedActivities]},dayIndex);});return formattedDays;};return _jsxs(View,{style:{flex:1},children:[isLoading?_jsxs(View,{style:styles.loadingContainer,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#eca406\"}),_jsx(Text,{children:\"Gerando seu itiner\\xE1rio...\"})]}):_jsxs(ScrollView,{style:styles.scrollView,children:[_jsx(Text,{style:styles.title,children:\"Seu Itiner\\xE1rio:\"}),formatItinerary(itinerary),_jsxs(View,{style:styles.buttonContainer,children:[_jsx(Pressable,{style:styles.button,onPress:()=>navigation.navigate('Formulario'),children:_jsx(Text,{style:styles.buttonText,children:\"Refazer\"})}),_jsx(Pressable,{style:styles.button,onPress:()=>{addItinerary(itinerary);navigation.navigate('Home');},children:_jsx(Text,{style:styles.buttonText,children:\"Salvar Itiner\\xE1rio\"})})]})]}),_jsx(View,{style:styles.footer,children:_jsx(Text,{style:styles.footerText,children:\"\\xA9 TechPeach Copyright 2024\"})})]});};export default ItineraryScreen;","map":{"version":3,"names":["GoogleGenerativeAI","React","useEffect","useState","ActivityIndicator","Pressable","ScrollView","Text","View","useItineraries","styles","cafeBar","comprasData","culinariaData","lugaresNoturnosData","museusData","parquesData","jsx","_jsx","jsxs","_jsxs","ItineraryScreen","route","navigation","formData","params","itinerary","setItinerary","isLoading","setIsLoading","addItinerary","API_KEY","fetchItinerary","allReviews","SheetJS","Página1","reviews","validReviews","filter","review","Lugar","reviewsSummary","map","Nota","Avaliacao","join","genAI","model","getGenerativeModel","chatSession","startChat","generationConfig","temperature","topP","topK","maxOutputTokens","responseMimeType","history","role","parts","text","userMessage","address","days","selectedOptions","travelCompanion","peopleCount","budget","exclusions","dietaryRestriction","accessibilityOption","selectedCuisines","eventDetails","result","sendMessage","generatedItinerary","response","error","console","alert","newItinerary","getParent","getState","routes","find","name","handleSaveItinerary","navigate","formatItinerary","itineraryText","dayRegex","match","exec","push","index","length","formattedDays","startIndex","dayIndex","endIndex","dayText","substring","dayNumber","activities","split","line","trim","startsWith","formattedActivities","activity","activityIndex","replace","style","periodTitle","children","description","details","activityContainer","activityDescription","activityDetails","dayContainer","dayTitle","flex","loadingContainer","size","color","scrollView","title","buttonContainer","button","onPress","buttonText","footer","footerText"],"sources":["C:/Users/labsfiap/Downloads/Proj-challenge/src/screens/ItineraryScreen/index.js"],"sourcesContent":["import * as GoogleGenerativeAI from '@google/generative-ai';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, Pressable, ScrollView, Text, View } from 'react-native';\r\n\r\nimport { useItineraries } from '../../components/ItineraryContext';\r\n\r\nimport styles from \"./style\";\r\n\r\n// IMport das reviews JSON\r\nimport cafeBar from '../../../assets/reviews/Cafe-Restaurante-Bar-.json';\r\nimport comprasData from '../../../assets/reviews/Compras-.json';\r\nimport culinariaData from '../../../assets/reviews/CulinariaBrasileira-Italiana-Mexicana-Japonesa-.json';\r\nimport lugaresNoturnosData from '../../../assets/reviews/LugaresNoturnos-.json';\r\nimport museusData from '../../../assets/reviews/Museus-Teatros-.json';\r\nimport parquesData from '../../../assets/reviews/Parque-Zoo-Aquario-Trilha-Jardim.json';\r\n\r\nconst ItineraryScreen = ({ route, navigation }) => {\r\n  const { formData } = route.params;\r\n  const [itinerary, setItinerary] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { addItinerary } = useItineraries();\r\n\r\n  const API_KEY = 'AIzaSyBMrNd8C3B5dCBevyM6kez4UTdH2GaL4o4'; // Replace with your API Key\r\n\r\n  useEffect(() => {\r\n    const fetchItinerary = async () => {\r\n      if (!formData) {\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Combine all reviews into a single array\r\n        const allReviews = [\r\n          ...parquesData.SheetJS,\r\n          ...lugaresNoturnosData.Página1,\r\n          ...comprasData.Página1,\r\n          ...cafeBar.Página1,\r\n          ...culinariaData.Página1,\r\n          ...museusData.reviews,\r\n        ];\r\n\r\n        // Filtra os reviews que possuem a propriedade 'Lugar' e não são nulos\r\n        const validReviews = allReviews.filter(review => review && review.Lugar);\r\n\r\n        // Usa o array validReviews no map\r\n        const reviewsSummary = validReviews.map(review => {\r\n          return `Lugar: ${review.Lugar}, Nota: ${review.Nota}/5, Avaliação: ${review.Avaliacao}`;\r\n        }).join('\\n');\r\n\r\n        // Set up the chat session with the reviews data included in the history\r\n        const genAI = new GoogleGenerativeAI.GoogleGenerativeAI(API_KEY);\r\n        const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' }); // Use a suitable Gemini model\r\n\r\n        const chatSession = model.startChat({\r\n          generationConfig: {\r\n            temperature: 1,\r\n            topP: 0.95,\r\n            topK: 64,\r\n            maxOutputTokens: 8192,\r\n            responseMimeType: \"text/plain\",\r\n          },\r\n          history: [\r\n            {\r\n              role: \"user\",\r\n              parts: [\r\n                {\r\n                  text: `Analise as seguintes avaliações de lugares em São Paulo para gerar o melhor itinerário para o usuário:\r\n                  ${reviewsSummary}`,\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        });\r\n\r\n        // Send the user's itinerary preferences as the next input\r\n        const userMessage = `\r\n          Crie um itinerário de viagem detalhado para cidade de São Paulo com base nas seguintes informações que o usuário informou:\r\n          - Endereço do Hotel: ${formData.address} \r\n          - Duração da viagem: ${formData.days} dias\r\n          - Preferências: ${formData.selectedOptions.join(', ')}\r\n          - Acompanhantes: ${formData.travelCompanion}\r\n          - Quantidade de pessoas: ${formData.peopleCount}\r\n          - Orçamento: R$ ${formData.budget}\r\n          - Exclusões: ${formData.exclusions}\r\n          - Restrições alimentares: ${formData.dietaryRestriction}\r\n          - Acessibilidade: ${formData.accessibilityOption}\r\n          - Culinária: ${formData.selectedCuisines.join(', ')}\r\n          - Evento: ${formData.eventDetails}\r\n\r\n          Inclua sugestões de:\r\n          - Horários para cada atividade\r\n          - Meios de transporte\r\n          - Custo estimado de cada atividade (se possível)\r\n          - Links para mais informações sobre cada local\r\n          - Dicas adicionais para aproveitar ao máximo a viagem a São Paulo! \r\n        `;\r\n\r\n        const result = await chatSession.sendMessage(userMessage);\r\n        const generatedItinerary = result.response.text();\r\n\r\n        setItinerary(generatedItinerary);\r\n      } catch (error) {\r\n        console.error('Erro ao gerar o itinerário:', error);\r\n        alert('Erro ao gerar o itinerário. Tente novamente.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchItinerary();\r\n  }, [formData]);\r\n\r\n  // useEffect para salvar o itinerário no MyItinerary (movido para fora)\r\n  useEffect(() => {\r\n    if (route.params?.newItinerary) {\r\n      navigation.getParent()?.getState()?.routes.find(route => route.name === 'MeusItinerarios')\r\n        ?.params?.handleSaveItinerary(route.params.newItinerary);\r\n\r\n      // Navegue para 'Home' após salvar o itinerário\r\n      navigation.navigate('Home');\r\n    }\r\n  }, [route.params?.newItinerary]);\r\n\r\n  const formatItinerary = (itineraryText) => {\r\n    if (!itineraryText) return null;\r\n\r\n    const dayRegex = /Dia (\\d+)/g;\r\n    let days = [];\r\n    let match;\r\n    while ((match = dayRegex.exec(itineraryText)) !== null) {\r\n      days.push(match.index);\r\n    }\r\n\r\n    if (days.length === 0) {\r\n      days = [0];\r\n    }\r\n\r\n    const formattedDays = days.map((startIndex, dayIndex) => {\r\n      const endIndex = dayIndex < days.length - 1 ? days[dayIndex + 1] : itineraryText.length;\r\n      const dayText = itineraryText.substring(startIndex, endIndex);\r\n\r\n      const dayNumber = dayIndex + 1;\r\n\r\n      const activities = dayText.split('\\n')\r\n        .filter(line => line.trim() !== '' && !line.startsWith('Dia '))\r\n        .map(line => line.trim());\r\n\r\n      const formattedActivities = activities.map((activity, activityIndex) => {\r\n        activity = activity.replace(/\\*\\*/g, '');\r\n        activity = activity.replace(/(\\d+)\\n(\\d+)/g, '$1$2');\r\n\r\n        if (activity.match(/(Manhã|Tarde|Noite)/)) {\r\n          return (\r\n            <Text key={`${dayIndex}-${activityIndex}`} style={styles.periodTitle}>\r\n              {activity}\r\n            </Text>\r\n          );\r\n        }\r\n\r\n        let [description, ...details] = activity.split(':');\r\n        details = details.join(':').trim();\r\n\r\n        return (\r\n          <View key={`${dayIndex}-${activityIndex}`} style={styles.activityContainer}>\r\n            <Text style={styles.activityDescription}>{description.trim()}</Text>\r\n            {details ? <Text style={styles.activityDetails}>{details}</Text> : null}\r\n          </View>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <View key={dayIndex} style={styles.dayContainer}>\r\n          <Text style={styles.dayTitle}>Dia {dayNumber}</Text>\r\n          {formattedActivities}\r\n        </View>\r\n      );\r\n    });\r\n\r\n    return formattedDays;\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      {isLoading ? (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#eca406\" />\r\n          <Text>Gerando seu itinerário...</Text>\r\n        </View>\r\n      ) : (\r\n        <ScrollView style={styles.scrollView}>\r\n          <Text style={styles.title}>Seu Itinerário:</Text>\r\n          {formatItinerary(itinerary)}\r\n\r\n          <View style={styles.buttonContainer}>\r\n            <Pressable style={styles.button} onPress={() => navigation.navigate('Formulario')}>\r\n              <Text style={styles.buttonText}>Refazer</Text>\r\n            </Pressable>\r\n\r\n            <Pressable\r\n              style={styles.button}\r\n              onPress={() => {\r\n                addItinerary(itinerary);\r\n                navigation.navigate('Home');\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Salvar Itinerário</Text>\r\n            </Pressable>\r\n          </View>\r\n        </ScrollView>\r\n      )}\r\n\r\n      <View style={styles.footer}>\r\n        <Text style={styles.footerText}>\r\n          &#169; TechPeach Copyright 2024\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ItineraryScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}